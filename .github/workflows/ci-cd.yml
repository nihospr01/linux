name: CI/CD

on:
  push:
    branches: [ debian-ucsd-ospboard-20.07 ]
  pull_request:
    branches: [ debian-ucsd-ospboard-20.07 ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: install pre-reqs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y       build-essential crossbuild-essential-arm64 \
                                        p7zip-full gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
                                        cpp-aarch64-linux-gnu binutils-aarch64-linux-gnu \
                                        flex bison automake libtool bc libfdt-dev \
                                        libncurses5-dev dialog simg2img img2simg \
                                        initramfs-tools android-tools-mkbootimg

      - uses: actions/checkout@v2

      - name: download files
        run: |
          wget -O initrd.img 'https://docs.google.com/uc?export=download&id=1lRiVGu6mNroZietOP-4tZ3yGly6GCrEz'
          # wget --save-cookies cookies.txt 'https://docs.google.com/uc?export=download&id=1VnM-jsUHrGd8fq7UCD_NTL9Q69FS4ZqV' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1/p' > confirm.txt
          # wget --load-cookies cookies.txt -O rootfs.simg.7z 'https://docs.google.com/uc?export=download&id=1VnM-jsUHrGd8fq7UCD_NTL9Q69FS4ZqV&confirm='$(cat confirm.txt)
          # rm -f confirm.txt cookies.txt
      
      # - name: mount rootfs
      #   run: |
      #     7z e -bd rootfs.simg.7z
      #     simg2img rootfs.simg rootfs.img
      #     sudo mkdir -p /mnt/rootfs
      #     sudo mount -t ext4 -o rw,loop,auto rootfs.img /mnt/rootfs
      #     sudo mount -t devpts devpts /mnt/rootfs/dev/pts
      #     sudo mount -t sysfs sysfs /mnt/rootfs/sys
      #     sudo mount -t proc prof /mnt/rootfs/proc
      
      # - name: build firmware
      #   env: 
      #     ARCH: arm64
      #     CROSS_COMPILE: aarch64-linux-gnu-
      #   run: |
      #     make defconfig distro.config
      #     make Image.gz modules dtbs
      #     sudo make modules_install INSTALL_MOD_STRIP=0 INSTALL_MOD_PATH=/mnt/rootfs
      #     cat arch/arm64/boot/Image.gz arch/arm64/boot/dts/qcom/apq8016-sbc.dtb > Image.gz+dtb
      #     mkbootimg --kernel Image.gz+dtb \
      #               --ramdisk initrd.img \
      #               --output boot.img \
      #               --pagesize 2048 \
      #               --base 0x80000000 \
      #               --cmdline "root=/dev/mmcblk0p10 rw rootwait console=ttyMSM0,115200n8"
      #     rm -f Image.gz+dtb

      # - name: update rootfs
      #   run: |
      #     sudo umount /mnt/rootfs/proc
      #     sudo umount /mnt/rootfs/sys
      #     sudo umount /mnt/rootfs/dev/pts
      #     sudo umount /mnt/rootfs
      #     img2simg rootfs.img rootfs.simg
      #     rm -f rootfs.simg.7z
      #     7z a -bd rootfs.simg.7z rootfs.simg

      - name: get upload-url
        id: get-upload-url
        run: |
          UPLOAD_URL=$(curl -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/nihospr01/OpenSpeechPlatform-UCSD/releases/latest 2>/dev/null | sed -n 's/"upload_url": "\(.*\)",/\1/p')
          echo "::set-output name=upload_url::$UPLOAD_URL"
          cp initrd.img boot.img

      - name: upload boot.img
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get-upload-url.outputs.upload_url }}
          asset_path: boot.img
          asset_name: boot.img
          asset_content_type: application/x-raw-disk-image

      # - name: upload rootfs
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.get-upload-url.outputs.upload_url }}
      #     asset_path: rootfs.simg.7z
      #     asset_name: rootfs.simg.7z
      #     asset_content_type: application/x-7z-compressed
